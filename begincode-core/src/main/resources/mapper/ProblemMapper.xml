<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.begincode.core.mapper.ProblemMapper" >
  <resultMap id="BaseResultMap" type="net.begincode.core.model.Problem" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="problem_id" property="problemId" jdbcType="INTEGER" />
    <result column="title" property="title" jdbcType="VARCHAR" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="vote_count" property="voteCount" jdbcType="INTEGER" />
    <result column="collect_count" property="collectCount" jdbcType="INTEGER" />
    <result column="view_count" property="viewCount" jdbcType="INTEGER" />
    <result column="solve" property="solve" jdbcType="TINYINT" />
    <result column="delete_flag" property="deleteFlag" jdbcType="TINYINT" />
    <result column="feedback" property="feedback" jdbcType="TINYINT" />
    <result column="begincode_user_id" property="begincodeUserId" jdbcType="INTEGER" />
    <result column="answer_count" property="answerCount" jdbcType="INTEGER" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="net.begincode.core.model.Problem" extends="BaseResultMap" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <result column="content" property="content" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    problem_id, title, user_name, create_time, update_time, vote_count, collect_count, 
    view_count, solve, delete_flag, feedback, begincode_user_id, answer_count
  </sql>
  <sql id="Blob_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="net.begincode.core.model.ProblemExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="net.begincode.core.model.ProblemExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem
    where problem_id = #{problemId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from problem
    where problem_id = #{problemId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="net.begincode.core.model.ProblemExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="net.begincode.core.model.Problem" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="problemId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into problem (title, user_name, create_time, 
      update_time, vote_count, collect_count, 
      view_count, solve, delete_flag, 
      feedback, begincode_user_id, answer_count, 
      content)
    values (#{title,jdbcType=VARCHAR}, #{userName,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{voteCount,jdbcType=INTEGER}, #{collectCount,jdbcType=INTEGER}, 
      #{viewCount,jdbcType=INTEGER}, #{solve,jdbcType=TINYINT}, #{deleteFlag,jdbcType=TINYINT}, 
      #{feedback,jdbcType=TINYINT}, #{begincodeUserId,jdbcType=INTEGER}, #{answerCount,jdbcType=INTEGER}, 
      #{content,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="net.begincode.core.model.Problem" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <selectKey resultType="java.lang.Integer" keyProperty="problemId" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into problem
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        title,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="voteCount != null" >
        vote_count,
      </if>
      <if test="collectCount != null" >
        collect_count,
      </if>
      <if test="viewCount != null" >
        view_count,
      </if>
      <if test="solve != null" >
        solve,
      </if>
      <if test="deleteFlag != null" >
        delete_flag,
      </if>
      <if test="feedback != null" >
        feedback,
      </if>
      <if test="begincodeUserId != null" >
        begincode_user_id,
      </if>
      <if test="answerCount != null" >
        answer_count,
      </if>
      <if test="content != null" >
        content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="title != null" >
        #{title,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="voteCount != null" >
        #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null" >
        #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null" >
        #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="solve != null" >
        #{solve,jdbcType=TINYINT},
      </if>
      <if test="deleteFlag != null" >
        #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="feedback != null" >
        #{feedback,jdbcType=TINYINT},
      </if>
      <if test="begincodeUserId != null" >
        #{begincodeUserId,jdbcType=INTEGER},
      </if>
      <if test="answerCount != null" >
        #{answerCount,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        #{content,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="net.begincode.core.model.ProblemExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem
    <set >
      <if test="record.problemId != null" >
        problem_id = #{record.problemId,jdbcType=INTEGER},
      </if>
      <if test="record.title != null" >
        title = #{record.title,jdbcType=VARCHAR},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.voteCount != null" >
        vote_count = #{record.voteCount,jdbcType=INTEGER},
      </if>
      <if test="record.collectCount != null" >
        collect_count = #{record.collectCount,jdbcType=INTEGER},
      </if>
      <if test="record.viewCount != null" >
        view_count = #{record.viewCount,jdbcType=INTEGER},
      </if>
      <if test="record.solve != null" >
        solve = #{record.solve,jdbcType=TINYINT},
      </if>
      <if test="record.deleteFlag != null" >
        delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="record.feedback != null" >
        feedback = #{record.feedback,jdbcType=TINYINT},
      </if>
      <if test="record.begincodeUserId != null" >
        begincode_user_id = #{record.begincodeUserId,jdbcType=INTEGER},
      </if>
      <if test="record.answerCount != null" >
        answer_count = #{record.answerCount,jdbcType=INTEGER},
      </if>
      <if test="record.content != null" >
        content = #{record.content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem
    set problem_id = #{record.problemId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      vote_count = #{record.voteCount,jdbcType=INTEGER},
      collect_count = #{record.collectCount,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      solve = #{record.solve,jdbcType=TINYINT},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      feedback = #{record.feedback,jdbcType=TINYINT},
      begincode_user_id = #{record.begincodeUserId,jdbcType=INTEGER},
      answer_count = #{record.answerCount,jdbcType=INTEGER},
      content = #{record.content,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem
    set problem_id = #{record.problemId,jdbcType=INTEGER},
      title = #{record.title,jdbcType=VARCHAR},
      user_name = #{record.userName,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      vote_count = #{record.voteCount,jdbcType=INTEGER},
      collect_count = #{record.collectCount,jdbcType=INTEGER},
      view_count = #{record.viewCount,jdbcType=INTEGER},
      solve = #{record.solve,jdbcType=TINYINT},
      delete_flag = #{record.deleteFlag,jdbcType=TINYINT},
      feedback = #{record.feedback,jdbcType=TINYINT},
      begincode_user_id = #{record.begincodeUserId,jdbcType=INTEGER},
      answer_count = #{record.answerCount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="net.begincode.core.model.Problem" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem
    <set >
      <if test="title != null" >
        title = #{title,jdbcType=VARCHAR},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="voteCount != null" >
        vote_count = #{voteCount,jdbcType=INTEGER},
      </if>
      <if test="collectCount != null" >
        collect_count = #{collectCount,jdbcType=INTEGER},
      </if>
      <if test="viewCount != null" >
        view_count = #{viewCount,jdbcType=INTEGER},
      </if>
      <if test="solve != null" >
        solve = #{solve,jdbcType=TINYINT},
      </if>
      <if test="deleteFlag != null" >
        delete_flag = #{deleteFlag,jdbcType=TINYINT},
      </if>
      <if test="feedback != null" >
        feedback = #{feedback,jdbcType=TINYINT},
      </if>
      <if test="begincodeUserId != null" >
        begincode_user_id = #{begincodeUserId,jdbcType=INTEGER},
      </if>
      <if test="answerCount != null" >
        answer_count = #{answerCount,jdbcType=INTEGER},
      </if>
      <if test="content != null" >
        content = #{content,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where problem_id = #{problemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="net.begincode.core.model.Problem" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem
    set title = #{title,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      vote_count = #{voteCount,jdbcType=INTEGER},
      collect_count = #{collectCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      solve = #{solve,jdbcType=TINYINT},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      feedback = #{feedback,jdbcType=TINYINT},
      begincode_user_id = #{begincodeUserId,jdbcType=INTEGER},
      answer_count = #{answerCount,jdbcType=INTEGER},
      content = #{content,jdbcType=LONGVARCHAR}
    where problem_id = #{problemId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="net.begincode.core.model.Problem" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update problem
    set title = #{title,jdbcType=VARCHAR},
      user_name = #{userName,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      vote_count = #{voteCount,jdbcType=INTEGER},
      collect_count = #{collectCount,jdbcType=INTEGER},
      view_count = #{viewCount,jdbcType=INTEGER},
      solve = #{solve,jdbcType=TINYINT},
      delete_flag = #{deleteFlag,jdbcType=TINYINT},
      feedback = #{feedback,jdbcType=TINYINT},
      begincode_user_id = #{begincodeUserId,jdbcType=INTEGER},
      answer_count = #{answerCount,jdbcType=INTEGER}
    where problem_id = #{problemId,jdbcType=INTEGER}
  </update>
  <select resultMap="ResultMapWithBLOBs" parameterType="net.begincode.core.model.ProblemExample" id="selectByExampleWithBLOBsWithRowbounds" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select resultMap="BaseResultMap" parameterType="net.begincode.core.model.ProblemExample" id="selectByExampleWithRowbounds" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from problem
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
</mapper>