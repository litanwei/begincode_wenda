<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="net.begincode.core.mapper.BizBegincodeUserMapper">

	<sql id="Base_Column_List">
		
		begincode_user_id, login_name, pwd, nickname, cdate, sex, tel_phone,
		email, receive_email,
		pic, check_flag, gag, course, open_id,
		access_token, user_source_id,
		delete_flag,
		invite_code
	</sql>
	<resultMap id="BaseResultMap" type="net.begincode.core.model.BizBegincodeUser">
		
		<id column="begincode_user_id" property="begincodeUserId" jdbcType="INTEGER" />
		<result column="login_name" property="loginName" jdbcType="VARCHAR" />
		<result column="pwd" property="pwd" jdbcType="VARCHAR" />
		<result column="nickname" property="nickname" jdbcType="VARCHAR" />
		<result column="cdate" property="cdate" jdbcType="TIMESTAMP" />
		<result column="sex" property="sex" jdbcType="CHAR" />
		<result column="tel_phone" property="telPhone" jdbcType="VARCHAR" />
		<result column="email" property="email" jdbcType="VARCHAR" />
		<result column="receive_email" property="receiveEmail"
			jdbcType="CHAR" />
		<result column="pic" property="pic" jdbcType="VARCHAR" />
		<result column="check_flag" property="checkFlag" jdbcType="CHAR" />
		<result column="gag" property="gag" jdbcType="CHAR" />
		<result column="course" property="course" jdbcType="VARCHAR" />
		<result column="open_id" property="openId" jdbcType="VARCHAR" />
		<result column="access_token" property="accessToken" jdbcType="VARCHAR" />
		<result column="user_source_id" property="userSourceId"
			jdbcType="INTEGER" />
		<result column="delete_flag" property="deleteFlag" jdbcType="CHAR" />
		<result column="invite_code" property="inviteCode" jdbcType="VARCHAR" />
		<result column="activeCount" property="activeCount" jdbcType="INTEGER" />
	</resultMap>


	<select id="getActiverUser" resultMap="BaseResultMap">
		select bup.begincode_user_id,bup.nickname,(bup.pcount+count(a.answer_id)) activeCount from (
		select bu.begincode_user_id,bu.nickname,count(p.problem_id) pcount
		from begincode_user bu
		left join problem p on bu.begincode_user_id = p.begincode_user_id and p.create_time > #{dateBefore }  group by bu.begincode_user_id,bu.nickname
		) bup
		left join answer a on bup.begincode_user_id = a.begincode_user_id and a.create_time > #{dateBefore }
		group by bup.begincode_user_id,bup.nickname order by activeCount desc limit 10;


	</select>
</mapper>